name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."


# name: Build and Release Electron App

# on:
#   push:
#     tags:
#       - 'v*' # Trigger on version tags (e.g., v1.0.0)

# jobs:
#   build:
#     strategy:
#       matrix:
#         os: [ubuntu-latest, windows-latest, macos-latest]
#         include:
#           - os: windows-latest
#             platform: win
#             artifact-name: windows-build
#           - os: ubuntu-latest
#             platform: linux
#             artifact-name: linux-build
#           - os: macos-latest
#             platform: mac
#             artifact-name: macos-build
#     runs-on: ${{ matrix.os }}

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 22
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm install

#       - name: Build renderer (vpsl-miner) and electron app and package electron app
#         run: npx nx package electron --${{ matrix.platform }}

#       - name: Upload artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: ${{ matrix.artifact-name }}
#           path: dist/electron/* # Upload all built files

#   create-release:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Download all artifacts
#         uses: actions/download-artifact@v4
#         with:
#           path: artifacts/

#       - name: Create Release and Upload Assets
#         uses: softprops/action-gh-release@v2
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.ref_name }}
#           name: Release ${{ github.ref_name }}
#           body: |
#             Changes in this Release:
#             - Latest miner build
#           draft: false
#           prerelease: false
#           files: artifacts/**/*

#       - name: Log build result
#         if: always()
#         run: |
#           if [ ${{ job.status }} == "success" ]; then
#             echo "Build and release completed successfully"
#           else
#             echo "Build and release failed"
#           fi