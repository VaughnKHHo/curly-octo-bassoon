name: Build and Release Electron App

permissions:
  contents: write

on:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [windows-latest]
        include:
          - os: windows-latest
            platform: win
            artifact-name: windows-build
          # - os: ubuntu-latest
          #   platform: linux
          #   artifact-name: linux-build
          # - os: macos-latest
          #   platform: mac
          #   artifact-name: macos-build
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build & package renderer (vpsl-miner) and electron app ${{ matrix.platform }}
        run: npx nx package electron

      - name: Make electron app ${{ matrix.platform }}
        run: npx nx run electron:make

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: dist/executables/dFusion DLP miner Setup 0.1.0.exe

      - name: debug files
        run: dir

      - name: dist
        run: dir dist

      - name: dist/executables
        run: dir dist/executables

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            Changes in this Release:
            - Latest miner build
          draft: false
          prerelease: false
          files: ./dist/executables/dFusion DLP miner Setup 0.1.0.exe

      - name: Log build result
        if: always()
        shell: pwsh  # Explicitly use PowerShell
        run: |
          if ("${{ job.status }}" -eq "success") {
            echo "Build and release completed successfully"
          } else {
            echo "Build and release failed"
          }

  # create-release:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: artifacts/

  #     - name: Create Release and Upload Assets
  #       uses: softprops/action-gh-release@v2
  #       # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.ref_name }}
  #         name: Release ${{ github.ref_name }}
  #         body: |
  #           Changes in this Release:
  #           - Latest miner build
  #         draft: false
  #         prerelease: false
  #         files: ./dist/executables/dFusion DLP miner Setup 0.1.0.exe

  #     - name: Log build result
  #       if: always()
  #       run: |
  #         if [ ${{ job.status }} == "success" ]; then
  #           echo "Build and release completed successfully"
  #         else
  #           echo "Build and release failed"
  #         fi